#+STARTUP: showall
#+OPTIONS: \n:t
#+OPTIONS: toc:nil

* ido-mode (Dired替代品)
** 基本的配置文件
#+BEGIN_SRC elisp
  (setq ido-enable-flex-matching t)
  (setq ido-use-filename-at-point 'guess)
  (setq ido-everywhere t)
  ;; 打开ido-mode
  (ido-mode 1)
  ;; ido-mode 默认是横向显示的, 这个设置可以修改的竖向显示
  (setq ido-separator "\n")
  ;; ido模式切换buffer的时候默认忽略一些你不想看到的buffer 比如说*scratch*
  (setq ido-ignore-buffers '("^ " "*Completions*" "*Shell Command Output*"
                             "*Messages*" "Async Shell Command" "*scratch*"))
  (setq ido-auto-merge-work-directories-length -1)
#+END_SRC
** 基本操作
C-j 可以让ido-mode按照你指定的目录打开, 而不是自动提示的
C-d 在dired中打开目前指定的目录
~/ 跳转到当前用户的家目录
// 跳转到系统的根目录
M-m 在目前目录下新建文件夹
C-a 显示被隐藏的文件

* semantic-mode (emacs自带的代码跳转分析功能)

** symbol补全

#+BEGIN_SRC elisp
  (semamtic-complete-analyze-inline)
#+END_SRC
这个函数可以帮助你补全symbol或者function
快捷键是 C-c , space

** 声明定义跳转 

#+BEGIN_SRC elisp
  (semantic-ia-fast-jump)
#+END_SRC
可以跳转到函数声明或者定义, 头文件跳转也可以
快捷键是 C-c , g or M-.
ps. 这里的M-.是我自定义的键绑定, 因为比较习惯ggtags的键位

** 函数和头文件高亮 
#+BEGIN_SRC elisp
  (semantic-toggle-decoration-mode t)
#+END_SRC
函数的上方会有一个横线比较丑但是也挺方便, 头文件会有颜色高亮, 如果是找得到或者存在就是绿色, 如果找不到就是红色

** 其他模式禁用semantic-mode
#+BEGIN_SRC elisp
(add-to-list 'semantic-inhibit-functions
	     (lambda () (not (member major-mode '(c-mode c++-mode)))))
#+END_SRC

添加如上代码就会在其他模式比如javascript禁用semantic-mode, 如果不用这个代码, 那么别的模式就会偶尔报错


